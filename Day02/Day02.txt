1. JSX란?
    - JSX는 자바스크립트의 확장문법이고 XML과 매우 유사하게 생김
    - JSX는 브라우저 실행되기 전에 일반 자바스크립트 코드로 변환됨
    - JSX 코드는 보기 편하고 HTML 코드를 작성하는 것과 비슷함
    - JSX 코드로 작성된 컴포넌트는 태그처럼 사용 가능

2. JSX 문법
    - 컴포넌트에 여러가지 요소가 포함되면 반드시 부모요소 하나로 묶어줘야 됨
    - 부모요소는 대부분 <Fragment></Fragment>, 
      <></>(Fragment의 다른 표현), <div></div> 등으로 사용한다.
    - 자바스크립트의 표현식을 사용할 수 있다. 
    - 자바스크립트의 표현식은 {}로 감싸서 사용
    - if문 대신에 삼항조건연산자를 사용한다.
    - &&연산자를 이용한 조건부 렌더링 가능
    - 컴포넌트나 태그에 인라인 스타일을 사용할 경우 카멜케이스를 따른다.
      background-color => backgroundColor 
    - class 대신 className 을 사용한다.
    - HTML에서는 닫는 태그가 존재하는 태그들을 닫지 않아도 에러가 발생하지 않는다.
    - JSX에서는 닫는 태그들을 닫지 않으면 에러가 발생한다.
    - JSX에서 주석은 /**/로 사용한다.

3. 리액트의 컴포넌트
    - 리액트 컴포넌트의 형태는 클래스형 컴포넌트와 함수형 컴포넌트 두가지가 존재
    - 리액트 공식 문서에서는 함수형 컴포넌트와 Hooks를 사용하는 것을 권장하고 있다.

4. 클래스형 컴포넌트
    - class 컴포넌트명 extends Component {
        render(){

        }
    }
    - 클래스 내에서 render 메소드를 호출하여 렌더링을 진행

5. 함수형 컴포넌트
    - function 컴포넌트명() {
        return;
    }

    - const 컴포넌트명 = () => {
        return;
    }
    - return문을 이용하여 렌더링 진행
    - 클래스형 컴포넌트와 함수형 컴포넌트의 성능은 비슷하지만
      함수형 컴포넌트가 메모리를 적게 사용
    - 리액트에서 권장하는 함수형 컴포넌트를 사용한다.

6. props
    - props는 컴포넌트의 속성 값
    - 컴포넌트의 속성을 설정할 때 사용
    - props 값들은 부모 컴포넌트에서만 지정 가능